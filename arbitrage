#!/usr/bin/env python

from notify import checkforpricefluctuations
from exchange import Exchange
from gdax import gdax
from koinex import koinex
from exchangerate import get_exchangerate
from calculatearbitrage import CalculateArbitrage
from alertsettings import AlertSettings

import projectconfig as cfg


import time

def calculate_arbitrage(quoteType):
    cfg.QUOTETYPE = quoteType
    gex = gdax()
    gex.get_rates()
    #gex.print_price()
    gex.store_rates()

    koine = koinex()
    koine.get_rates()
    #koine.print_price()
    koine.store_rates()

    arb = CalculateArbitrage(koine, gex)
    arb.printarbitrage()
    checkforpricefluctuations('KOINEX')
    checkforpricefluctuations('GDAX')


if __name__ == "__main__":
   alrtSettings = AlertSettings()
   while True:
      #TODO : This try really should be moved to get_rates() because thats where the live ticker download could fail.
      try:
         calculate_arbitrage("highest_bid")
         cfg.LIVEQUOTE = False
         calculate_arbitrage("lowest_ask")
         cfg.LIVEQUOTE = True
      except ValueError as valueErr:
         cfg.logger.info("ERROR : ValueError exception occured: {0}".format(valueErr))
      except:
         cfg.logger.info("ERROR : Unknown exception")

      if(cfg.DEVELOPER_MODE):
         break
      time.sleep(cfg.POLLTIME)

